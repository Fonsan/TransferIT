package transferit.gui;

import java.io.File;
import transferit.gui.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileView;
import transferit.TransferIT;
import transferit.TransferITModel;

/**
 *
 * @author  delusive
 */
public class SettingFrame extends JFrame implements ActionListener {

    private TransferITModel model;
    private DefaultListModel userAccountModel = new DefaultListModel();
    private JFileChooser fileChooser = new JFileChooser();

    public SettingFrame(TransferITModel model) {
        initComponents();
        this.model = model;
        initUserAccountList();
        startUp();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((int) (d.getWidth() - this.getWidth()) / 2,
                (int) (d.getHeight() - this.getHeight()) / 2);
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    private void initUserAccountList() {

        for (String usr : model.getUsers().keySet()) {
            if (!usr.equals("anon")) {
                userAccountModel.addElement(usr);
            }
        }
        userAccountList.setModel(userAccountModel);
        userAccountList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        userAccountList.addListSelectionListener(new SettingsFrameListSelectionListener(userAccountList));
    }

    private void startUp() {
        serverPortInput.setText(model.getServerPort() + "");
        timeoutInput.setText(model.getTimeout());
        allowAnonymousLogin.setSelected(Boolean.valueOf(model.getAnonymousLogin()));
        sharedRootInput.setText(model.getRootPath());
        useTreeCheckBox.setSelected(Boolean.valueOf(model.getUseTree()));

        addButton.addActionListener(this);
        removeButton.addActionListener(this);
        closeButton.addActionListener(this);
        saveAndCloseButton.addActionListener(this);
        sharedRootBrowseButton.addActionListener(this);
        setTitle("Settings");
    }

    public void notifyText(String accountName) {
        usernameInput.setText(accountName);
        allowWrite.setSelected(Boolean.valueOf(model.getUserWriteAccess(accountName)));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serverPortLabel = new javax.swing.JLabel();
        serverPortInput = new javax.swing.JTextField();
        userAccountPanel = new javax.swing.JPanel();
        allowWrite = new javax.swing.JCheckBox();
        passwordInput = new javax.swing.JPasswordField();
        passwordLabel = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        userAccountScrollPane1 = new javax.swing.JScrollPane();
        userAccountList = new javax.swing.JList();
        sharedRootLabel = new javax.swing.JLabel();
        sharedRootInput = new javax.swing.JTextField();
        sharedRootBrowseButton = new javax.swing.JButton();
        timeoutLabel = new javax.swing.JLabel();
        timeoutInput = new javax.swing.JTextField();
        saveAndCloseButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        allowAnonymousLogin = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        useTreeCheckBox = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        serverPortLabel.setText("Server port:");

        serverPortInput.setText("port #");

        allowWrite.setText("Can write");

        passwordLabel.setText("Password:");

        usernameLabel.setText("Username:");

        addButton.setText("Add");

        removeButton.setText("Remove");

        userAccountList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        userAccountScrollPane1.setViewportView(userAccountList);

        javax.swing.GroupLayout userAccountPanelLayout = new javax.swing.GroupLayout(userAccountPanel);
        userAccountPanel.setLayout(userAccountPanelLayout);
        userAccountPanelLayout.setHorizontalGroup(
            userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userAccountPanelLayout.createSequentialGroup()
                .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLabel)
                    .addComponent(usernameLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userAccountPanelLayout.createSequentialGroup()
                        .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userAccountScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(passwordInput)
                            .addComponent(usernameInput))
                        .addGap(26, 26, 26)
                        .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userAccountPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(allowWrite))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userAccountPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        userAccountPanelLayout.setVerticalGroup(
            userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userAccountPanelLayout.createSequentialGroup()
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allowWrite)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userAccountPanelLayout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)
                        .addGap(33, 33, 33))
                    .addComponent(userAccountScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sharedRootLabel.setText("Path to share:");

        sharedRootInput.setText("Path to share..");

        sharedRootBrowseButton.setText("Browse..");

        timeoutLabel.setText("Timeout (ms):");

        timeoutInput.setText("#");

        saveAndCloseButton.setText("Save and close");

        closeButton.setText("Close");

        allowAnonymousLogin.setText("Allow anonymous login");

        useTreeCheckBox.setText("Use tree view over files");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(timeoutLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeoutInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(serverPortLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(serverPortInput, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userAccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(saveAndCloseButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(closeButton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(sharedRootLabel)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(sharedRootInput, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(useTreeCheckBox)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(sharedRootBrowseButton)))))))))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(allowAnonymousLogin)
                        .addContainerGap(109, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serverPortLabel)
                            .addComponent(serverPortInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeoutLabel)
                            .addComponent(timeoutInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sharedRootLabel)
                        .addGap(1, 1, 1)
                        .addComponent(sharedRootInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sharedRootBrowseButton)
                            .addComponent(useTreeCheckBox))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allowAnonymousLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(userAccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveAndCloseButton)
                    .addComponent(closeButton))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /* remove 'user' from the database */

    private void removeUser() {
        int index = userAccountList.getSelectedIndex();
        Object object = userAccountModel.get(index);
        if (object instanceof String) {
            model.removeUser((String) object);
            userAccountModel.removeElement((String) object);
        }
    }

    /* add a new user to the database */
    private void addNewUser(String username, String password, boolean write) {
        if (!username.equals("anon")) {
            model.addUser(username, password, write);
            userAccountModel.addElement(username);
        }
    }

    private void saveAndClose() {
        model.setServerPort(serverPortInput.getText());
        model.setTimeout(timeoutInput.getText());
        model.setUseTree(String.valueOf(useTreeCheckBox.isSelected()));
        if (allowAnonymousLogin.isSelected() && !model.getAnonymousLogin()) {
            model.addUser("anon", "anon", false);
        } else if (!allowAnonymousLogin.isSelected() && model.getAnonymousLogin()) {
            model.removeUser("anon");
        }
        if (!sharedRootInput.getText().equals("")) {
            String rootPath = sharedRootInput.getText();
            if (!model.getRootPath().equals(rootPath)) {
                if (JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(this, "Root directory changed, Server restart requried")) {
                    model.setRootPath(rootPath);
                    TransferIT.getTransferITController().updateServerStatus(rootPath);
                    TransferIT.getTransferITController().updateServerStatus(rootPath);
                }
            }

        }
        TransferIT.saveSettings();
        dispose();
    }

    public void actionPerformed(ActionEvent e) {
        Object object = e.getSource();
        if (object == addButton) {
            addNewUser(usernameInput.getText(), String.valueOf(passwordInput.getPassword()), allowWrite.isSelected());
            userAccountList.setSelectedIndex(userAccountList.getLastVisibleIndex());
        } else if (object == removeButton) {
            removeUser();
            usernameInput.setText(null);
            passwordInput.setText(null);
            allowWrite.setSelected(false);
        } else if (object == sharedRootBrowseButton) {
            fileChooser.setFileFilter(new FileFilter() {

                @Override
                public boolean accept(File f) {
                    return f.isDirectory();
                }

                @Override
                public String getDescription() {
                    return "only folders";
                }
            });

            int returnVal = fileChooser.showDialog(this, "Open");

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                sharedRootInput.setText(fileChooser.getSelectedFile().getAbsolutePath());
            }
        } else if (object == closeButton) {
            dispose();
        } else if (object == saveAndCloseButton) {
            saveAndClose();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox allowAnonymousLogin;
    private javax.swing.JCheckBox allowWrite;
    private javax.swing.JButton closeButton;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveAndCloseButton;
    private javax.swing.JTextField serverPortInput;
    private javax.swing.JLabel serverPortLabel;
    private javax.swing.JButton sharedRootBrowseButton;
    private javax.swing.JTextField sharedRootInput;
    private javax.swing.JLabel sharedRootLabel;
    private javax.swing.JTextField timeoutInput;
    private javax.swing.JLabel timeoutLabel;
    private javax.swing.JCheckBox useTreeCheckBox;
    private javax.swing.JList userAccountList;
    private javax.swing.JPanel userAccountPanel;
    private javax.swing.JScrollPane userAccountScrollPane1;
    private javax.swing.JTextField usernameInput;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
